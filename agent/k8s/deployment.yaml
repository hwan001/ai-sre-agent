apiVersion: apps/v1
kind: Deployment
metadata:
  name: sre-agent
  namespace: sre-system
  labels:
    app: sre-agent
    version: v3.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sre-agent
  template:
    metadata:
      labels:
        app: sre-agent
        version: v3.0.0
    spec:
      serviceAccountName: sre-agent
      containers:
      - name: sre-agent
        image: sre-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        # Environment variables from ConfigMap (non-sensitive)
        envFrom:
        - configMapRef:
            name: sre-agent-config
        # Environment variables from Secret (sensitive)
        env:
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: sre-agent-secrets
              key: azure-openai-endpoint
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: sre-agent-secrets
              key: azure-openai-api-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/detailed
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: sre-agent
  namespace: sre-system
  labels:
    app: sre-agent
spec:
  type: ClusterIP
  selector:
    app: sre-agent
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sre-agent
  namespace: sre-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sre-agent
rules:
- apiGroups: [""]
  resources:
  - pods
  - pods/log
  - services
  - events
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sre-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sre-agent
subjects:
- kind: ServiceAccount
  name: sre-agent
  namespace: sre-system

---
# ConfigMap for non-sensitive configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sre-agent-config
  namespace: sre-system
data:
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_LOG_LEVEL: "INFO"
  
  # Monitoring URLs (internal cluster services)
  PROMETHEUS_URL: "http://prom-kube-prometheus-stack-prometheus.observability:9090"
  LOKI_URL: "http://loki.observability:3100"
  LOKI_TIMEOUT: "30"
  
  # Kubernetes Configuration
  K8S_IN_CLUSTER: "true"
  K8S_NAMESPACE: "default"
  
  # LLM Settings
  AZURE_OPENAI_API_VERSION: "2024-02-15-preview"
  TEMPERATURE: "0.3"
  MAX_TOKENS: "1000"
  TIMEOUT_SECONDS: "60"

---
# Secret for sensitive credentials
# NOTE: Replace the placeholder values with actual credentials before deploying
apiVersion: v1
kind: Secret
metadata:
  name: sre-agent-secrets
  namespace: sre-system
  annotations:
    description: "Sensitive credentials for SRE Agent - DO NOT commit real values to git"
type: Opaque
stringData:
  # Azure OpenAI Configuration
  # Example: https://your-resource-name.openai.azure.com/
  azure-openai-endpoint: "https://REPLACE-WITH-YOUR-RESOURCE.openai.azure.com/"
  
  # Azure OpenAI API Key
  # Get this from Azure Portal > Azure OpenAI > Keys and Endpoint
  azure-openai-api-key: "REPLACE_WITH_YOUR_AZURE_OPENAI_API_KEY"

---
# Example: How to create secret from command line (recommended for production)
# 
# kubectl create secret generic sre-agent-secrets \
#   --from-literal=azure-openai-endpoint='https://your-resource.openai.azure.com/' \
#   --from-literal=azure-openai-api-key='your-actual-api-key' \
#   -n sre-system
#
# Or use sealed-secrets / external-secrets for better security:
# - Sealed Secrets: https://github.com/bitnami-labs/sealed-secrets
# - External Secrets: https://external-secrets.io/
